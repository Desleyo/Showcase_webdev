@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> signInManager

@{
    ViewData["Title"] = "Home Page";

    bool isAdmin = User.IsInRole("Admin");
}

<div class="text-center">
    <h1 class="display-4">Wedstrijd overzicht</h1>
</div>

@if (isAdmin)
{
    <button id="reset-match" onclick="resetMatch()" class="btn btn-lg btn-primary reset-match">Wedstrijd resetten</button>    
}

<match-component></match-component>

<!--Template-->
<template id="match-component-tpl">
    <style>
        #match {
        display: flex;
        align-items: center;
        justify-content: space-around;
        margin: auto;
        margin-top: 25px;
        width: 35%;
        height: 75px;
        background-color: grey;
        border-radius: 20px;
        }

        #score {
        display: flex;
        font-size: 20px;
        font-weight: bold;
        }

        button {
        visibility: visible;
        display: flex;
        width: 25px;
        height: 25px;
        align-items: center;
        justify-content: center;
        }
    </style>

    <div id="match">
        <p id="name_t1">team 1</p>
        @if (signInManager.IsSignedIn(User))
        {
            <button id="button_t1" onclick="addScore(this.nextElementSibling, '1')">+</button>
        }
        <p id="score">0 - 0</p>
        @if (signInManager.IsSignedIn(User))
        {
            <button id="button_t2" onclick="addScore(this.previousElementSibling, '2')">+</button>
        }
        <p id="name_t2">team 2</p>
    </div>
</template>

<script>
    const ws = new WebSocket("ws://localhost:8082");

    ws.addEventListener("open", () => {
        console.log("Connected");
    });

    ws.addEventListener("message", e => {
        const arr = JSON.parse(e.data).data;
        let newData = '';
        arr.forEach((element) => {
            newData+=String.fromCharCode(element);
        });

        console.log(newData);
        displayNewScore(newData);
    });

    class match_component extends HTMLElement {
        constructor() {
            super();
            let template = document.getElementById("match-component-tpl");
            let templateContent = template.content;

            const shadowRoot = this.attachShadow({ mode: "open" });
            shadowRoot.appendChild(templateContent.cloneNode(true));
        }
    }
    customElements.define("match-component", match_component);

    function addScore(score, team){
        let scoreContent = score.textContent;
        let scores = scoreContent.split(" ");

        let score_t1 = scores[0];
        let score_t2 = scores[2];

        team == 1 ? score_t1++ : score_t2++;
        let newScore = score_t1 + " - " + score_t2;
        
        ws.send(newScore);
    }

    function displayNewScore(newScore){
        let score = document.querySelector("match-component").shadowRoot.getElementById("score");
        score.textContent = newScore;
    }

    function resetMatch() {
        ws.send("0 - 0");
    }
</script>